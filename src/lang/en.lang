--- META INFO ---
# Language info
meta.name=English, UK
meta.author=TechnoBiscuit
# Locale to identify as when communicating with the Discord API. (see https://discord.com/developers/docs/interactions/application-commands#localization for more information)
# Remove this line if this language does not fit any of the locales listed by Discord.
meta.apiLocale=en-GB

--- CONSOLE ---
# Logging levels
console.logging.critical=Critical
console.logging.debug=Debug
console.logging.error=Error
console.logging.info=Info
console.logging.warn=Warn
# Messages
console.logging.loggerSetup=Logger setup.
console.logging.startMessage=Using locale '${0}' with translation provided by ${1}.

--- COMMAND HANDLER ---
handlers.command.debug.addDirAttempt=Attempting to add command directory: ${0}
handlers.command.debug.addedDir=Added command directory: ${0}
handlers.command.debug.loadedGroupDefinition=Loaded subcommand group definition\t/${0} ${1}
handlers.command.debug.loadedGroupedCommand=Loaded grouped subcommand\t\t/${0} ${1} ${2}
handlers.command.debug.loadedSubcommand=Loaded subcommand\t\t\t/${0} ${1}
handlers.command.debug.loadedTopLevelCommand=Loaded top level\t\t\t/${0}
handlers.command.debug.loadedTopLevelCommandGuild=Loaded top level\t\t\t/${0} (${1})
handlers.command.debug.loadingCommands=Loading commands...
handlers.command.debug.loadingFolderGlobal=Loading global commands.
handlers.command.debug.loadingFolderGlobalAndGuild=Loading global and guild specific commands.
handlers.command.debug.loadingFolderGuild=Loading guild specific commands.
handlers.command.debug.loadingFromDirectory=Attempting to load commands within ${0}
handlers.command.debug.noCommandsFound=No commands found within ${0}
handlers.command.debug.removeDirAttempt=Attempting to remove command directory: ${0}
handlers.command.debug.removedDir=Removed command directory: ${0}
handlers.command.error.cannotLoad=Error while loading ${0}:\n${1}
handlers.command.info.loadedCommands=Loaded commands!
handlers.command.warn.cannotFindGroup=${0}'s specified group (${1}) could not be found, and so will be ignored.
handlers.command.warn.folderIdentityCrisis=${0} is not a directory, and so ${1} will be ignored.
handlers.command.warn.invalidRole=/${0} ${1} has an invalid role (${2}), and so will not be included in the command structure.
handlers.command.warn.noExecute=${0} has no execute yet does not have a subcommand folder, and so will be ignored.
handlers.command.warn.noName=${0} does not have a name property, and so will be ignored.
handlers.command.warn.noSubcommands=${0} has no execute yet does not have any subcommands, and so will be ignored.
handlers.command.warn.overlappingDirectories=Some command paths contain each other, and so some commands may be loaded more than once.
--- DATABASE HANDLER ---
handlers.database.debug.loading=Attempting to load database handler...
handlers.database.error.noPath=No database path provided.
handlers.database.error.notInitialised=Please initialise the DatabaseHandler (DatabaseHandler.init) before attempting to perform an operation.
handlers.database.error.operationFailed=DB operation failed:\n${0}
handlers.database.info.loaded=Loaded database handler!
--- EVENT HANDLER ---
handlers.event.debug.addDirAttempt=Attempting to add event directory: ${0}
handlers.event.debug.addedDir=Added event directory: ${0}
handlers.event.debug.loadedEvent=Loaded ${0}
handlers.event.debug.loadingEvents=Loading events...
handlers.event.debug.loadingFromDirectory=Attempting to load events within ${0}
handlers.event.debug.noEventsFound=No events found within ${0}
handlers.event.debug.registeringEvent=Registering ${0} event...
handlers.event.debug.registeringEvents=Registering ${0} events...
handlers.event.debug.registeringSpecific=Registering ${0}...
handlers.event.debug.removedDir=Removed event directory: ${0}
handlers.event.debug.removedListeners=Removed all existing event listeners.
handlers.event.error.cannotLoad=Error while loading ${0}:\n${1}
handlers.event.info.loadedEvents=Loaded events!
handlers.event.warn.duplicateEvents=Multiple events were found with the name ${0} and so will be ignored:\n${1}
handlers.event.warn.noDebounceTime=${0} is setup to have debounce but doesn't have a time setting. If you want this event to use debouncing, please add a time property to the settings.debounce object.
handlers.event.warn.noEvent=${0} does not have an event property, and so will be ignored.
handlers.event.warn.noExecute=${0} does not have an execute property, and so will be ignored.
handlers.event.warn.noName=${0} does not have a name property. Whilst not essential, you may want to consider adding one to make debugging easier.
handlers.event.warn.overlappingDirectories=Some event paths contain each other, and so some events may be loaded more than once.
--- INTERACTION HANDLER ---
handlers.interaction.error.executeFail=Something went *very* wrong there. Please report this to the devs:\n`${0}`
handlers.interaction.message.guildsOnly=This command cannot be used in DMs.
handlers.interaction.message.invalidCommand=This command doesn't exist. If you can still see this command in your slash command menu, please allow up to an hour for Discord to realise this command doesn't exist.
handlers.interaction.message.noBotPermission=The bot needs the following permission to run this command: ${0}
handlers.interaction.message.noUserPermission=You don't have permission to run this command.

--- GENERIC MESSAGES ---
# Debug
generic.debug.loading.inline=Loading: ${0}
generic.debug.loading.newLine=Loading:\n${0}
# Error
generic.errors.directory.invalid='${0}' is not a directory.
generic.errors.path.doesNotExist='${0}' does not exist.
generic.errors.path.notAbsolute='${0}' is not an absolute path.
generic.errors.noClient=No client attached.
# Log messages
generic.logging.channel=Channel
generic.logging.footer=bot go brrrrrrrrrRRRRRRRRRRRRRRRR
generic.logging.genericError=something died
generic.logging.messageError=Couldn't send error message in error message channel.
generic.logging.server=Server
generic.logging.tooLong=too long - check console
generic.logging.user=User

--- EVENTS ---
# readyMessage
events.readyMessage.message=${0} is now online! Running in ${1} servers, ${2} channels and with ${3} users!
events.readyMessage.messageShard=${0} (shard \#${1}) is now online! Running in ${2} servers, ${3} channels and with ${4} users!
# registerCommands
events.registerCommands.error.cannotRegister=Cannot register command structure:\n${0}
events.registerCommands.error.cannotRegisterGuild=Cannot register command structure (${0}):\n${1}
events.registerCommands.info.registeredGlobalCommandStructure=Registered global command structure!
events.registerCommands.info.registeredGuildCommandStructure=Registered guild command structure! (${0})
events.registerCommands.info.registeringGlobalCommandStructure=Registering global command structure...
events.registerCommands.info.registeringGuildCommandStructure=Registering guild command structure... (${0})

--- COMMANDS ---
commands.global.test.name=testbutlocalised
commands.global.test.description=woo localised description
commands.options.global.test.defaults.name=localisedtestname
commands.options.global.test.defaults.description=localised test description

commands.guild.specific.name=specificbutlocalised